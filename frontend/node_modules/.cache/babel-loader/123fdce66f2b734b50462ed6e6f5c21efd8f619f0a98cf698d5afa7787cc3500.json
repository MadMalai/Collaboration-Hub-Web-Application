{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: 'admin_find',\n  data() {\n    return {\n      cam_list: [],\n      spon_list: [],\n      inf_list: [],\n      token: null,\n      roles: []\n    };\n  },\n  methods: {\n    getAdminFind() {\n      const path = 'http://127.0.0.1:5000/api/AdminFind';\n      axios.get(path, {\n        headers: {\n          Authorization: `${this.token}`\n        }\n      }).then(response => {\n        console.log(\"response block\", response);\n        if (response.status == 200) {\n          this.cam_list = response.data.cam_list;\n          this.spon_list = response.data.spon_list;\n          this.inf_list = response.data.inf_list;\n        }\n      }).catch(error => {\n        console.error(error);\n      });\n    },\n    flagCampaign(id) {\n      const path = 'http://127.0.0.1:5000/api/AdminFlagUser';\n      axios.put(path, {\n        \"objecttype\": \"1\",\n        \"objectid\": id\n      }, {\n        headers: {\n          Authorization: `${this.token}`\n        }\n      }).then(response => {\n        console.log(\"response block\", response);\n        if (response.status == 200) {}\n      }).catch(error => {\n        console.error(error);\n      });\n    },\n    flagSponsor(id) {\n      const path = 'http://127.0.0.1:5000/api/AdminFlagUser';\n      axios.put(path, {\n        \"objecttype\": \"2\",\n        \"objectid\": id\n      }, {\n        headers: {\n          Authorization: `${this.token}`\n        }\n      }).then(response => {\n        console.log(\"response block\", response);\n        if (response.status == 200) {}\n      }).catch(error => {\n        console.error(error);\n      });\n    },\n    flagInfluencer(id) {\n      const path = 'http://127.0.0.1:5000/api/AdminFlagUser';\n      axios.put(path, {\n        \"objecttype\": \"3\",\n        \"objectid\": id\n      }, {\n        headers: {\n          Authorization: `${this.token}`\n        }\n      }).then(response => {\n        console.log(\"response block\", response);\n        if (response.status == 200) {}\n      }).catch(error => {\n        console.error(error);\n      });\n    },\n    logoutfn() {\n      localStorage.clear();\n      this.$router.push('/');\n    }\n  },\n  created() {\n    this.token = localStorage.getItem('authToken');\n    if (!this.token) {\n      this.$router.push('/');\n    }\n    this.roles = localStorage.getItem('roles');\n    this.getAdminFind();\n  }\n};","map":{"version":3,"names":["axios","name","data","cam_list","spon_list","inf_list","token","roles","methods","getAdminFind","path","get","headers","Authorization","then","response","console","log","status","catch","error","flagCampaign","id","put","flagSponsor","flagInfluencer","logoutfn","localStorage","clear","$router","push","created","getItem"],"sources":["/Users/meena/Documents/learning/annamalai/Azure Test App/Collaboration-Hub-Web-Application/frontend/src/components/admin_find.vue"],"sourcesContent":["<template>\n    <div class=\"mt-4\"></div> \n    <h3> Welcome Admin! </h3>\n    <div style=\"padding: 100px;\">\n    <h5>Active Campaigns</h5>\n    <div class=\"mt-4\"></div>    \n    <div>\n    <table class=\"table\" id=\"camp_list\">\n      <thead>\n        <tr>\n        <th scope=\"col\">Campaign ID</th>\n        <th scope=\"col\">Campaign Name</th>\n        <th scope=\"col\">Campaign Description</th>\n        <th scope=\"col\">Sponsor Name</th>\n        <th scope=\"col\">Progress</th>\n        <th scope=\"col\"></th> \n        </tr>\n      </thead>\n      <tbody>\n            <tr v-for=\"(campaign, index) in cam_list\" :key=\"index\">\n                <td>{{ campaign.cam_id }}</td>\n                <td>{{ campaign.cam_name }}</td>\n                <td>{{ campaign.cam_desc }}</td>\n                <td>{{ campaign.org_name}}</td>\n                <td>{{ campaign.progress }}</td>\n                <td>\n                <router-link  class=\"btn btn-primary\" :to=\"{name: 'viewCampaignDetail', params: {cam_id: campaign['cam_id']}}\">View</router-link>         \n                </td>\n                <td>\n                    <button class=\"btn btn-danger\" @click=\"flagCampaign(campaign.cam_id)\" >Flag</button>\n                </td>\n              </tr>\n      </tbody>\n    </table>\n    </div>\n    <h5>List of Sponsors</h5>\n    <div>\n    <table class=\"table\" id=\"camp_list\">\n      <thead>\n        <tr>\n        <th scope=\"col\">Sponsor ID</th>\n        <th scope=\"col\">Sponsor Name</th>\n        <th scope=\"col\">Sponsor Industry</th>\n        <th scope=\"col\">Sponsor Organisation</th>\n        <th scope=\"col\"></th> \n        </tr>\n      </thead>\n      <tbody>\n            <tr v-for=\"(sponsor, index) in spon_list\" :key=\"index\">\n            <td>{{ sponsor.s_id }}</td>\n            <td>{{ sponsor.s_name }}</td>\n            <td>{{ sponsor.s_industry }}</td>\n            <td>{{ sponsor.org_name }}</td>\n            <!-- <td> -->\n                <!-- <router-link class=\"btn btn-primary\" :to=\"{ name: 'adminViewProfileDetails', params: { usertype, userid, s_id: sponsor.s_id, viewType: 2 } }\">View</router-link>\n            </td>\n            <td>\n                <router-link  class=\"btn btn-danger\" :to=\"{name: 'viewCampaignDetail', params: {cam_id: cam['cam_id']}}\">Flag</router-link>\n            </td> -->\n            <td>\n                <button class=\"btn btn-danger\" @click=\"flagSponsor(sponsor.s_id)\" >Flag</button>\n            </td>\n            </tr>\n      </tbody>\n    </table>\n    </div>\n    <h5>List of Influencers</h5>\n    <div>\n    <table class=\"table\" id=\"camp_list\">\n      <thead>\n        <tr>\n        <th scope=\"col\">Influencer ID</th>\n        <th scope=\"col\">Influencer Name</th>\n        <th scope=\"col\">Influencer Link</th>\n        <th scope=\"col\">Influencer Niche</th>\n        <th scope=\"col\"></th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr v-for=\"(inf, index) in inf_list\" :key=\"index\">\n            <td>{{ inf.i_id }}</td>\n            <td>{{ inf.i_name }}</td>\n            <td>{{ inf.i_link }}</td>\n            <td>{{ inf.i_niche }}</td>\n            <td>\n                <button class=\"btn btn-danger\" @click=\"flagInfluencer(inf.i_id)\" >Flag</button>\n            </td>\n            </tr>\n      </tbody>\n    </table>\n    </div>\n    </div>\n</template>\n<script>\nimport axios from 'axios';\n\nexport default {\n    name: 'admin_find',\n  data() {\n    return {\n      cam_list: [],\n      spon_list: [],\n      inf_list: [],\n      token: null,\n      roles:[]      \n        }\n  },\n  methods: {\n\n  getAdminFind() {\n      const path = 'http://127.0.0.1:5000/api/AdminFind';\n      axios\n      .get(path,\n            {headers: {Authorization: `${this.token}`}})\n      .then((response) => {\n        console.log(\"response block\", response)\n        if (response.status == 200) {\n            this.cam_list = response.data.cam_list;\n            this.spon_list = response.data.spon_list;\n            this.inf_list = response.data.inf_list;\n        }         \n        })\n        .catch((error) => {\n          console.error(error);\n        });\n    }, \n    flagCampaign(id){\n        const path = 'http://127.0.0.1:5000/api/AdminFlagUser';\n      axios\n      .put(path,{\"objecttype\":\"1\" ,\"objectid\":id },\n            {headers: {Authorization: `${this.token}`}})\n      .then((response) => {\n        console.log(\"response block\", response)\n        if (response.status == 200) {\n\n        }         \n        })\n        .catch((error) => {\n          console.error(error);\n        });        \n    },\n    flagSponsor(id){\n        const path = 'http://127.0.0.1:5000/api/AdminFlagUser';\n      axios\n      .put(path,{\"objecttype\":\"2\" ,\"objectid\":id },\n            {headers: {Authorization: `${this.token}`}})\n      .then((response) => {\n        console.log(\"response block\", response)\n        if (response.status == 200) {\n\n        }         \n        })\n        .catch((error) => {\n          console.error(error);\n        });        \n    },\n    flagInfluencer(id){\n        const path = 'http://127.0.0.1:5000/api/AdminFlagUser';\n      axios\n      .put(path,{\"objecttype\":\"3\" ,\"objectid\":id },\n            {headers: {Authorization: `${this.token}`}})\n      .then((response) => {\n        console.log(\"response block\", response)\n        if (response.status == 200) {\n\n        }         \n        })\n        .catch((error) => {\n          console.error(error);\n        });        \n    },      \n    logoutfn(){\n        localStorage.clear()\n        this.$router.push('/')\n      },\n    },\n\n  created() {\n    this.token = localStorage.getItem('authToken');\n    if (!this.token) {\n        this.$router.push('/')\n    }\n    this.roles = localStorage.getItem('roles');\n\n    this.getAdminFind() ;\n  },\n\n\n\n}\n</script>\n<style lang=\"\">\n    \n</style>\n\n\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}