{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      roles: '',\n      cam_list: [],\n      cam_req_list: [],\n      token: null,\n      userid: this.userid,\n      reaction: null,\n      r_id: null,\n      req: null\n    };\n  },\n  methods: {\n    getCampaigns() {\n      axios.get(`http://127.0.0.1:5000/api/CampaignInfluencerSpecific/${this.userid}`, {\n        headers: {\n          Authorization: `${this.token}`\n        }\n      }).then(response => {\n        console.log(\"response block\", response);\n        if (response.status == 200) {\n          this.cam_list = response.data.data;\n        }\n      }).catch(error => {\n        console.error(error);\n      });\n    },\n    logoutfn() {\n      localStorage.clear();\n      this.$router.push('/');\n    },\n    getCampaignsRequests() {\n      axios.get(`http://127.0.0.1:5000/api/Ad_request`, {\n        headers: {\n          Authorization: `${this.token}`\n        }\n      }).then(response => {\n        console.log(\"response block\", response);\n        if (response.status == 200) {\n          this.cam_req_list = response.data.data;\n        }\n      }).catch(error => {\n        console.error(error);\n      });\n    },\n    updateRequestStatus(id) {\n      axios.put('http://127.0.0.1:5000/api/Inf_ad_req_decision', id, {\n        headers: {\n          Authorization: `${this.token}`\n        }\n      }).then(response => {\n        console.log(\"response block\", response);\n        if (response.status == 201) {\n          this.getCampaignsRequests();\n        }\n      }).catch(error => {\n        console.log(\"error block\", error);\n      });\n    }\n  },\n  created() {\n    this.roles = localStorage.getItem('roles');\n    this.userid = localStorage.getItem('user_id');\n    this.token = localStorage.getItem('authToken');\n    if (!this.token) {\n      this.$router.push('/');\n    }\n    this.getCampaigns();\n    this.getCampaignsRequests();\n  }\n};","map":{"version":3,"names":["axios","data","roles","cam_list","cam_req_list","token","userid","reaction","r_id","req","methods","getCampaigns","get","headers","Authorization","then","response","console","log","status","catch","error","logoutfn","localStorage","clear","$router","push","getCampaignsRequests","updateRequestStatus","id","put","created","getItem"],"sources":["/Users/meena/Documents/learning/annamalai/Azure Test App/Collaboration-Hub-Web-Application/frontend/src/components/influencer_home.vue"],"sourcesContent":["<template>\n    <h3> Welcome Influencer! </h3>\n    <br>\n    <br>\n    <h4> Active Campaigns </h4>\n    <br>\n    <div class=\"container-fluid\">\n      <div class=\"row\">\n        <div v-if=\"this.cam_list.length > 0\">\n            <div v-for=\"(cam, index) in cam_list\" :key=\"index\">\n            <!-- Card 1 -->\n                <div class=\"col\">\n                    <div class=\"card\">\n                        <div class=\"card-body d-flex justify-content-between align-items-center\">\n                            <div class=\"card-title\"><b>Sponsor</b> {{ cam['org_name'] }} | <b>Campaign</b> {{ cam['cam_name'] }} | <b>Ad Name</b> {{ cam['ad_name'] }} | <b>Proress</b>  {{ cam['progress'] }} %</div>\n                            <router-link  class=\"btn btn-primary\" :to=\"{name: 'viewCampaignDetail', params: {cam_id: cam['cam_id']}}\">View</router-link> \n                            </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div v-else>\n            <p>No Campaigns active. Please accept Ad to view Camapign details here..</p>\n        </div>\n          <div>\n          </div>\n      </div>\n\n      <div class=\"row mt-4\" >\n        <h4> New Ad Requests recevied from Sponsors </h4>\n\n        <div class=\"row mt-4\" v-if=\"this.cam_list.length > 0\">\n                <div v-for=\"(cam, index) in cam_req_list\" :key=\"index\">\n                  <div class=\"col-8 col-md-4\"> \n                    <div class=\"card\" style=\"width: 100%;\" >\n                      <div class=\"card-header\"><b>{{ cam.ad_name }}</b></div>\n                          <div class=\"card-body\">\n                            <p class=\"card-text\"> <b>Campaign :</b> {{ cam.cam_name }} <br> <b>Ad Requirement:</b> {{ cam.ad_req }} <br> <b>Goals:</b> {{ cam.goals }} <br> <b>Sponsor Name:</b> {{ cam.org_name }} </p>\n                            <router-link  class=\"btn btn-primary\" :to=\"{name: 'viewCampaignDetail', params: {cam_id: cam['cam_id']}}\">View</router-link> \n                            <button type=\"button\" class=\"btn btn-primary\" @click=\"updateRequestStatus({reaction:1,r_id:cam.r_id})\">Accept</button>\n                            <button type=\"button\" class=\"btn btn-primary\" @click=\"updateRequestStatus({reaction:2,r_id:cam.r_id})\">Negotiate</button>\n                            <button type=\"button\" class=\"btn btn-danger\" @click=\"updateRequestStatus({reaction:3,r_id:cam.r_id})\">Reject</button>\n                          </div>  \n                    </div>\n\n              </div>\n          </div>\n        </div>\n        <div v-else>\n            <p>No Pendng Requests from Sponsors..</p>\n        </div>\n      </div>  \n\n    </div>\n</template>\n<script>\nimport axios from 'axios';\n\nexport default {\n    data() {\n    return {\n      roles:'',\n      cam_list: [],\n      cam_req_list:[],\n      token: null,\n      userid:this.userid,\n      reaction:null,\n      r_id:null,\n      req:null\n\n    }\n  },\n  methods:{\n    getCampaigns() {\n      axios\n      .get(`http://127.0.0.1:5000/api/CampaignInfluencerSpecific/${this.userid}`,\n            {headers: {Authorization: `${this.token}`}})\n      .then((response) => {\n        console.log(\"response block\", response)\n        if (response.status == 200) {\n            this.cam_list = response.data.data;\n        }\n          \n        })\n        .catch((error) => {\n          console.error(error);\n        });\n    },\n\n    logoutfn(){\n      localStorage.clear()\n      this.$router.push('/')\n    },\n    getCampaignsRequests() {\n    axios\n    .get(`http://127.0.0.1:5000/api/Ad_request`,\n          {headers: {Authorization: `${this.token}`}})\n    .then((response) => {\n      console.log(\"response block\", response)\n      if (response.status == 200) {\n          this.cam_req_list = response.data.data;\n      }\n        \n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  },\n    updateRequestStatus(id) {\n    axios\n        .put('http://127.0.0.1:5000/api/Inf_ad_req_decision', \n       id,{headers: {Authorization: `${this.token}`}})\n        .then(response => {\n            console.log(\"response block\", response)\n            if (response.status == 201) {\n                this.getCampaignsRequests()\n\n                }\n            }\n        )\n        .catch(error => {\n            console.log(\"error block\", error)\n        })\n    },\n    },\n\n  created() {\n    this.roles = localStorage.getItem('roles');\n    this.userid = localStorage.getItem('user_id');\n    this.token = localStorage.getItem('authToken');\n\n    if (!this.token) {\n        this.$router.push('/')\n    }\n\n    this.getCampaigns();\n    this.getCampaignsRequests()\n},\n}\n</script>\n<style lang=\"\">\n    \n</style>"],"mappings":"AAwDA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACXC,IAAIA,CAAA,EAAG;IACP,OAAO;MACLC,KAAK,EAAC,EAAE;MACRC,QAAQ,EAAE,EAAE;MACZC,YAAY,EAAC,EAAE;MACfC,KAAK,EAAE,IAAI;MACXC,MAAM,EAAC,IAAI,CAACA,MAAM;MAClBC,QAAQ,EAAC,IAAI;MACbC,IAAI,EAAC,IAAI;MACTC,GAAG,EAAC;IAEN;EACF,CAAC;EACDC,OAAO,EAAC;IACNC,YAAYA,CAAA,EAAG;MACbX,KAAI,CACHY,GAAG,CAAC,wDAAwD,IAAI,CAACN,MAAM,EAAE,EACpE;QAACO,OAAO,EAAE;UAACC,aAAa,EAAE,GAAG,IAAI,CAACT,KAAK;QAAE;MAAC,CAAC,EAChDU,IAAI,CAAEC,QAAQ,IAAK;QAClBC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEF,QAAQ;QACtC,IAAIA,QAAQ,CAACG,MAAK,IAAK,GAAG,EAAE;UACxB,IAAI,CAAChB,QAAO,GAAIa,QAAQ,CAACf,IAAI,CAACA,IAAI;QACtC;MAEA,CAAC,EACAmB,KAAK,CAAEC,KAAK,IAAK;QAChBJ,OAAO,CAACI,KAAK,CAACA,KAAK,CAAC;MACtB,CAAC,CAAC;IACN,CAAC;IAEDC,QAAQA,CAAA,EAAE;MACRC,YAAY,CAACC,KAAK,CAAC;MACnB,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,GAAG;IACvB,CAAC;IACDC,oBAAoBA,CAAA,EAAG;MACvB3B,KAAI,CACHY,GAAG,CAAC,sCAAsC,EACrC;QAACC,OAAO,EAAE;UAACC,aAAa,EAAE,GAAG,IAAI,CAACT,KAAK;QAAE;MAAC,CAAC,EAChDU,IAAI,CAAEC,QAAQ,IAAK;QAClBC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEF,QAAQ;QACtC,IAAIA,QAAQ,CAACG,MAAK,IAAK,GAAG,EAAE;UACxB,IAAI,CAACf,YAAW,GAAIY,QAAQ,CAACf,IAAI,CAACA,IAAI;QAC1C;MAEA,CAAC,EACAmB,KAAK,CAAEC,KAAK,IAAK;QAChBJ,OAAO,CAACI,KAAK,CAACA,KAAK,CAAC;MACtB,CAAC,CAAC;IACN,CAAC;IACCO,mBAAmBA,CAACC,EAAE,EAAE;MACxB7B,KAAI,CACC8B,GAAG,CAAC,+CAA+C,EACrDD,EAAE,EAAC;QAAChB,OAAO,EAAE;UAACC,aAAa,EAAE,GAAG,IAAI,CAACT,KAAK;QAAE;MAAC,CAAC,EAC5CU,IAAI,CAACC,QAAO,IAAK;QACdC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEF,QAAQ;QACtC,IAAIA,QAAQ,CAACG,MAAK,IAAK,GAAG,EAAE;UACxB,IAAI,CAACQ,oBAAoB,CAAC;QAE1B;MACJ,CACJ,EACCP,KAAK,CAACC,KAAI,IAAK;QACZJ,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEG,KAAK;MACpC,CAAC;IACL;EACA,CAAC;EAEHU,OAAOA,CAAA,EAAG;IACR,IAAI,CAAC7B,KAAI,GAAIqB,YAAY,CAACS,OAAO,CAAC,OAAO,CAAC;IAC1C,IAAI,CAAC1B,MAAK,GAAIiB,YAAY,CAACS,OAAO,CAAC,SAAS,CAAC;IAC7C,IAAI,CAAC3B,KAAI,GAAIkB,YAAY,CAACS,OAAO,CAAC,WAAW,CAAC;IAE9C,IAAI,CAAC,IAAI,CAAC3B,KAAK,EAAE;MACb,IAAI,CAACoB,OAAO,CAACC,IAAI,CAAC,GAAG;IACzB;IAEA,IAAI,CAACf,YAAY,CAAC,CAAC;IACnB,IAAI,CAACgB,oBAAoB,CAAC;EAC9B;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}